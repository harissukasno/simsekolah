name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test # configure with Jest/Playwright
      - name: Build app
        run: npm run build

  build-and-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sekolah
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Wait for MySQL
        run: sleep 30
      - name: Run tests
        env:
            DB_HOST: universal_mysql   # <â”€ ini penting: pakai nama service
            DB_PORT: 3306
            DB_USER: root
            DB_PASS: root
            DB_NAME: simsekolah
        run: npm run test # configure with Jest/Supertest
      - name: Build app
        run: npm run build

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [build-and-test-frontend, build-and-test-backend]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/dev.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sekolah-backend:latest
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/dev.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sekolah-frontend:latest
      - name: Trigger Portainer Webhook for Backend
        run: curl -X POST ${{ secrets.PORTAINER_BACKEND_WEBHOOK }}
      - name: Trigger Portainer Webhook for Frontend
        run: curl -X POST ${{ secrets.PORTAINER_FRONTEND_WEBHOOK }}      